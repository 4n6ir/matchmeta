Resources:
  TemporaryVPC7B62D817:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.42.0/24
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: RunmetaStack/TemporaryVPC
        - Key: runmeta
          Value: runmeta
  TemporaryVPCPublicSubnet1Subnet25E1A4CA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: TemporaryVPC7B62D817
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 192.168.42.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: RunmetaStack/TemporaryVPC/PublicSubnet1
        - Key: runmeta
          Value: runmeta
  TemporaryVPCPublicSubnet1RouteTable36968F6D:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: TemporaryVPC7B62D817
      Tags:
        - Key: Name
          Value: RunmetaStack/TemporaryVPC/PublicSubnet1
        - Key: runmeta
          Value: runmeta
  TemporaryVPCPublicSubnet1RouteTableAssociation0E9F2A99:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: TemporaryVPCPublicSubnet1RouteTable36968F6D
      SubnetId:
        Ref: TemporaryVPCPublicSubnet1Subnet25E1A4CA
  TemporaryVPCPublicSubnet1DefaultRouteBCFD2063:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: TemporaryVPCPublicSubnet1RouteTable36968F6D
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: TemporaryVPCIGW2D0EB1EB
    DependsOn:
      - TemporaryVPCVPCGWBC7F52FC
  TemporaryVPCIGW2D0EB1EB:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: RunmetaStack/TemporaryVPC
        - Key: runmeta
          Value: runmeta
  TemporaryVPCVPCGWBC7F52FC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: TemporaryVPC7B62D817
      InternetGatewayId:
        Ref: TemporaryVPCIGW2D0EB1EB
  TemporaryRoleE5449BEE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags:
        - Key: runmeta
          Value: runmeta
  TemporaryRoleDefaultPolicy15A8F53A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucketAcl
              - s3:GetObject
              - s3:ListBucket
              - s3:PutObject
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: TemporaryRoleDefaultPolicy15A8F53A
      Roles:
        - Ref: TemporaryRoleE5449BEE
  TemporaryEC2InstanceSecurityGroupCC68AC80:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RunmetaStack/TemporaryEC2/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: RunmetaStack/TemporaryEC2
        - Key: runmeta
          Value: runmeta
      VpcId:
        Ref: TemporaryVPC7B62D817
  TemporaryEC2InstanceProfileB0A1F3D1:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: TemporaryRoleE5449BEE
  TemporaryEC201C7701E:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: TemporaryEC2InstanceProfileB0A1F3D1
      ImageId:
        Ref: SsmParameterValuematchmetassmamiC96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType:
        Ref: ec2typeParameter
      LaunchTemplate:
        LaunchTemplateName: RunmetaStackTemporaryEC2LaunchTemplateFD2BC5DE
        Version:
          Fn::GetAtt:
            - TemporaryEC2LaunchTemplate1E5E11DB
            - LatestVersionNumber
      SecurityGroupIds:
        - Fn::GetAtt:
            - TemporaryEC2InstanceSecurityGroupCC68AC80
            - GroupId
      SubnetId:
        Ref: TemporaryVPCPublicSubnet1Subnet25E1A4CA
      Tags:
        - Key: Name
          Value: RunmetaStack/TemporaryEC2
        - Key: runmeta
          Value: runmeta
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - |+
                Content-Type: multipart/mixed; boundary="+AWS+CDK+User+Data+Separator=="
                MIME-Version: 1.0

                --+AWS+CDK+User+Data+Separator==
                Content-Type: text/x-shellscript; charset="utf-8"
                Content-Transfer-Encoding: base64

              - Fn::Base64:
                  Fn::Join:
                    - ""
                    - - |-
                        #!/bin/bash
                        yum install file-devel python3-pip unzip wget -y
                        wget https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -P /tmp/
                        unzip /tmp/awscli-exe-linux-x86_64.zip -d /tmp
                        ./tmp/aws/install
                        aws s3 cp /boot/System* s3://
                      - Ref: dwarfParameter
                      - |-
                        
                        pip3 install getmeta
                        cd /tmp && getmeta
                        aws s3 cp /tmp/ip-* s3://
                      - Ref: rawParameter
              - |
                
                --+AWS+CDK+User+Data+Separator==--
    DependsOn:
      - TemporaryRoleDefaultPolicy15A8F53A
      - TemporaryRoleE5449BEE
  TemporaryEC2LaunchTemplate1E5E11DB:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        MetadataOptions:
          HttpTokens: required
      LaunchTemplateName: RunmetaStackTemporaryEC2LaunchTemplateFD2BC5DE
Parameters:
  ec2typeParameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /matchmeta/ssm/ec2type
  archtypeParameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /matchmeta/ssm/arch
  dwarfParameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /matchmeta/bucket/dwarf
  rawParameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /matchmeta/bucket/raw
  SsmParameterValuematchmetassmamiC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /matchmeta/ssm/ami
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/4n6ir/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

